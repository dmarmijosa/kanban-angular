{"version":3,"sources":["./src/app/home/home-routing.module.ts","./src/environments/environment.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/board/components/create-task/create-task.component.ts","./src/app/board/components/create-task/create-task.component.html","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/components/modal/modal.component.ts","./src/app/shared/components/modal/modal.component.html","./src/app/home/home/home.component.html","./src/app/home/home/home.component.ts","./src/app/home/home.module.ts","./src/app/core/services/index.ts","./src/app/core/index.ts","./src/app/shared/utils/index.ts","./src/app/board/components/task/task.component.ts","./src/app/board/components/task/task.component.html","./src/app/board/board/board.component.html","./src/app/board/board/board.component.ts","./src/app/board/components/list/list.component.ts","./src/app/board/components/list/list.component.html","./src/app/core/core.module.ts","./src/app/board/board.module.ts","./src/app/shared/utils/helpers.ts","./src/app/core/services/api.service.ts","./src/app/core/models/index.ts","./src/app/material-cdk/material-cdk.module.ts","./src/app/board/board-routing.module.ts","./src/app/app-routing.module.ts","./src/app/core/services/task.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MaterialCdkModule } from \"./../material-cdk/material-cdk.module\";\n\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { ModalComponent } from './components/modal/modal.component';\n\nconst declarables = [ HeaderComponent, FooterComponent, ModalComponent ];\n@NgModule({\n  declarations: [declarables],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MaterialCdkModule,\n  ],\n  exports: declarables,\n})\nexport class SharedModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Workshop';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { BoardModule } from './board/board.module';\nimport { HomeModule } from './home/home.module';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    CoreModule,\n    SharedModule,\n    BoardModule,\n    HomeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TaskSchema, ListSchema } from 'src/app/core/';\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { take } from 'rxjs/operators';\nimport { CdkConnectedOverlay } from '@angular/cdk/overlay';\nimport { TaskService } from 'src/app/core/services/task.service';\nimport { generateUniqueId } from 'src/app/shared/utils/';\n\ntype DropdownObject = {\n  value: string;\n  viewValue: string;\n};\n\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.scss'],\n})\nexport class CreateTaskComponent implements OnInit {\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\n  @Input() connectedOverlay: CdkConnectedOverlay;\n  @Input() task?: TaskSchema;\n  @Input() listId?: string;\n\n  formText: string;\n  createTask: FormGroup;\n  selectedPriority: string;\n\n  priorities: DropdownObject[] = [\n    { value: 'urgent', viewValue: 'Urgente' },\n    { value: 'moderate', viewValue: 'Moderado' },\n    { value: 'low', viewValue: 'Bajo' },\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private _ngZone: NgZone,\n    private tasksService: TaskService\n  ) {}\n\n  ngOnInit(): void {\n    this.setForm();\n    this.selectedPriority = '';\n    if (this.task && this.task.id &&  this.task.id.length > 0) {\n      this.setValuesOnForm(this.task);\n      this.formText = 'Editar';\n      this.selectedPriority = this.task.priority;\n    } else {\n      this.formText = 'Crear';\n    }\n  }\n\n  setForm(): void {\n    this.createTask = this.fb.group({\n      date: [new Date(), Validators.required],\n      priority: ['urgent', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n\n  onFormAdd(form: TaskSchema): void {\n\n    if (this.createTask.valid && this.task && !this.task.id) {\n      form.id = generateUniqueId();\n      this.tasksService.addTask(form);\n      this.close();\n    } else if (this.task && this.listId){\n      const findPriority = this.priorities.find(\n        (element) => form.priority === element.value\n      );\n      form.id = this.task.id;\n      form.priority = !findPriority ? this.task.priority : form.priority;\n      form.date = new Date(form.date);\n      if (form.priority) {\n        this.tasksService.updateTask(form, this.listId);\n      }\n      this.close();\n    }\n  }\n\n  setValuesOnForm(form: TaskSchema): void {\n    this.createTask.setValue({\n      date: new Date(form.date),\n      priority: form.priority,\n      description: form.description,\n    });\n  }\n\n  triggerResize() {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n\n  close(): void {\n    this.connectedOverlay.overlayRef.detach();\n  }\n}\n","<form\n  class=\"form\"\n  [formGroup]=\"createTask\"\n  (ngSubmit)=\"onFormAdd(createTask.value)\"\n  novalidate\n>\n  <header class=\"form__header\">\n    <h3 class=\"form__header__title\">{{ formText }} Tarea</h3>\n    <button\n      class=\"form__header__close-button\"\n      mat-raised-button\n      (click)=\"close()\"\n    >\n      <mat-icon aria-hidden=\"false\" aria-label=\"close icon\">close</mat-icon>\n    </button>\n  </header>\n  <section class=\"form__fields\">\n    <mat-form-field class=\"form__fields__item\" appearance=\"fill\">\n      <mat-label>Fecha</mat-label>\n      <input\n        matInput\n        placeholder=\"Fecha\"\n        formControlName=\"date\"\n        [matDatepicker]=\"picker\"\n      />\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n      <mat-error> Fecha es <strong>requerida</strong> </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"form__fields__item\" appearance=\"fill\">\n      <mat-label>Seleccione una prioridad</mat-label>\n      <select\n        matNativeControl\n        [(ngModel)]=\"selectedPriority\"\n        name=\"priority\"\n        formControlName=\"priority\"\n      >\n        <option value=\"\" selected></option>\n        <option *ngFor=\"let priority of priorities\" [value]=\"priority.value\">\n          {{ priority.viewValue }}\n        </option>\n      </select>\n      <mat-error> Prioridad es <strong>requerida</strong> </mat-error>\n    </mat-form-field>\n\n    <mat-form-field\n      class=\"form__fields__item\"\n      appearance=\"fill\"\n      color=\"primary\"\n    >\n      <mat-label>Descripción</mat-label>\n      <textarea\n        matInput\n        formControlName=\"description\"\n        cdkTextareaAutosize\n        #autosize=\"cdkTextareaAutosize\"\n        cdkAutosizeMinRows=\"1\"\n        cdkAutosizeMaxRows=\"5\"\n      >\n      </textarea>\n      <mat-error> Descripcion es <strong>requerida</strong> </mat-error>\n    </mat-form-field>\n\n    <button\n      class=\"form__fields__button\"\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"!createTask.valid\"\n    >\n    {{formText}}\n    </button>\n  </section>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  today: number = Date.now();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n  <mat-toolbar color=\"primary\" class=\"toolbar\">\n    <p class=\"toolbar__text\"> &copy; {{ today | date: 'yyyy' }}</p>\n  </mat-toolbar>\n</footer>","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"toolbar\">\n  <span>Kanban</span>\n  <span class=\"toolbar__spacer\"></span>\n  <nav class=\"toolbar__menu\">\n    <ul>\n      <li>\n        <a\n          href=\"#\"\n          routerLink=\"/home\"\n          routerLinkActive=\"active\"\n          class=\"toolbar__menu__text\"\n        >\n          <button\n            mat-icon-button\n            class=\"toolbar__menu__icon favorite-icon\"\n            aria-label=\"Home option\"\n          >\n            <mat-icon>home</mat-icon>\n          </button>\n          <span>Inicio</span>\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          routerLink=\"/board\"\n          routerLinkActive=\"active\"\n          class=\"toolbar__menu__text\"\n          ><button\n            mat-icon-button\n            class=\"toolbar__menu__icon\"\n            aria-label=\"Board option\"\n          >\n            <mat-icon>note</mat-icon></button\n          ><span> Tablero</span>\n        </a>\n      </li>\n    </ul>\n  </nav>\n</mat-toolbar>\n","import { Component, AfterViewInit, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';\nimport {TemplatePortal} from '@angular/cdk/portal';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements AfterViewInit {\n  @ViewChild('templatePortalContent') templatePortalContent: TemplateRef<unknown>;\n\n  templatePortal: TemplatePortal<any>;\n\n  constructor(private _viewContainerRef: ViewContainerRef) { }\n\n  ngAfterViewInit(): void {\n    this.templatePortal = new TemplatePortal(\n      this.templatePortalContent,\n      this._viewContainerRef\n    );\n  }\n\n}\n","\n<mat-dialog-content>\n  <ng-container *cdkPortalOutlet></ng-container>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button mat-dialog-close color=\"secondary\">\n    <mat-icon aria-hidden=\"false\" aria-label=\"close icon\">close</mat-icon>\n  </button>\n</mat-dialog-actions>\n\n\n<div #templatePortalContent>Tu Tarea ha sido eliminada exitosamente!</div>\n","<main class=\"home\">\n  <h1 class=\"home__title\">Kanban</h1>\n  <p>\n    En nuestro día a día siempre tenemos que realizar diferentes tipos de tareas\n    y priorizarlas y dejarlas por escrito nos ayuda a abordarlas mucho más\n    rápido y lograr su realización\n  </p>\n  <p>Por ello en este tablero te invitamos a organizar tu día a día</p>\n  <section class=\"home__task-list\">\n    <h2 class=\"home__task-list__title\">Lista de tareas</h2>\n    <div class=\"home__task-list__buttons\">\n      <button\n        class=\"option-button\"\n        mat-button\n        mat-raised-button\n        (click)=\"getPrioritiesTask('urgent')\"\n      >\n        <mat-icon aria-hidden=\"false\" aria-label=\"urgent icon\">alarm</mat-icon\n        >Urgentes\n      </button>\n      <button\n        class=\"option-button\"\n        mat-button\n        mat-raised-button\n        (click)=\"getPrioritiesTask('moderate')\"\n      >\n        <mat-icon aria-hidden=\"false\" aria-label=\"medium icon\"\n          >autorenew</mat-icon\n        >Moderadas\n      </button>\n      <button\n        class=\"option-button\"\n        mat-button\n        mat-raised-button\n        (click)=\"getPrioritiesTask('low')\"\n      >\n        <mat-icon aria-hidden=\"false\" aria-label=\"medium icon\"\n          >assignment_returned</mat-icon\n        >Bajas\n      </button>\n    </div>\n    <div class=\"home__task-list__container\">\n      <mat-task class=\"task\" *ngFor=\"let task of taskList\">\n        <mat-task-header\n          [ngClass]=\"{\n            'task__header--urgent': task.priority === 'urgent',\n            'task__header--moderate': task.priority === 'moderate',\n            'task__header--low': task.priority === 'low'\n          }\"\n        >\n          <mat-task-title class=\"task-title\">\n            <div class=\"task-title__icon\">\n              <mat-icon\n                aria-hidden=\"false\"\n                aria-label=\"urgent icon\"\n                *ngIf=\"task.priority === 'urgent'\"\n                >alarm</mat-icon\n              >\n              <mat-icon\n                aria-hidden=\"false\"\n                aria-label=\"medium icon\"\n                *ngIf=\"task.priority === 'moderate'\"\n                >autorenew</mat-icon\n              >\n              <mat-icon\n                aria-hidden=\"false\"\n                aria-label=\"medium icon\"\n                *ngIf=\"task.priority === 'low'\"\n                >assignment_returned</mat-icon\n              >\n              <span>Tarea</span>\n            </div>\n          </mat-task-title>\n          <mat-task-subtitle class=\"task__task-list__subtitle\"\n            ><strong>Fecha de finalización:</strong>\n            {{ task.date | date }}</mat-task-subtitle\n          >\n        </mat-task-header>\n        <mat-task-content class=\"task__content\">\n          <p class=\"task__task-list__description\">\n            {{ task.description }}\n          </p>\n        </mat-task-content>\n      </mat-task>\n    </div>\n    <div class=\"home__task-list__message\" *ngIf=\"taskList?.length == 0\">\n      <p class=\"text\">No hay elementos para mostrar</p>\n    </div>\n  </section>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService, ListSchema, TaskSchema } from './../../core';\nimport { TaskService } from 'src/app/core/services/task.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  taskList: TaskSchema[];\n\n  constructor(private apiService: ApiService, private taskService: TaskService) {}\n\n  ngOnInit(): void {}\n\n  // \n  \n  getPrioritiesTask(PriorityType: string): void {\n    this.taskService.getBoardList$\n      .subscribe(\n        (response: ListSchema[]) => {\n          const lists = response;\n          let tasks: TaskSchema[] = [];\n          lists.map((element: ListSchema )=> {\n            element.tasks.map((task: TaskSchema) => {\n              if(task.priority == PriorityType){\n                tasks.push(task)\n              }\n            });\n          });\n          this.taskList = tasks;\n        },\n        (error: string) => (console.log('Ups! we have an error: ', error))\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialCdkModule } from './../material-cdk/material-cdk.module';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home/home.component';\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    MaterialCdkModule,\n  ]\n})\nexport class HomeModule { }\n","export * from './api.service';","export * from './services';\nexport * from './models';","export * from './helpers';","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ListSchema, TaskSchema } from './../../../core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalComponent } from 'src/app/shared/components/modal/modal.component';\nimport { TaskService } from 'src/app/core/services/task.service';\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss'],\n})\nexport class TaskComponent implements OnInit {\n  @Input() task: TaskSchema;\n  @Output() editTask: EventEmitter<TaskSchema> = new EventEmitter();\n  @Input() list?: ListSchema;\n\n  constructor(public dialog: MatDialog, public tasksService: TaskService) {}\n\n  ngOnInit(): void {}\n\n  handleEditTask(task: TaskSchema) {\n    this.editTask.emit(task);\n  }\n\n  removeTask(taskId: string): void {\n    const dialogRef = this.dialog.open(ModalComponent);\n    dialogRef.afterClosed().subscribe((result) => {\n      if (this.list) {\n        this.tasksService.removeTask(taskId, this.list);\n      }\n    });\n  }\n}\n","<div \n  class=\"task\"\n  id=\"task_{{task.id}}\"\n  [ngClass]=\"{'task--urgent': task.priority === 'urgent', 'task--moderate': task.priority === 'moderate', 'task--low': task.priority === 'low'}\"\n  >\n  <div class=\"task__icon\">\n    <mat-icon aria-hidden=\"false\" aria-label=\"urgent icon\" *ngIf=\"task.priority === 'urgent'\">alarm</mat-icon>\n    <mat-icon aria-hidden=\"false\" aria-label=\"medium icon\" *ngIf=\"task.priority === 'moderate'\">autorenew</mat-icon>\n    <mat-icon aria-hidden=\"false\" aria-label=\"medium icon\" *ngIf=\"task.priority === 'low'\">assignment_returned</mat-icon>\n  </div>\n  <h3 class=\"task__title\">Tarea</h3>\n  <button  matTooltip=\"Editar tarea\" matTooltipClass=\"custom-tooltip-blue\" matTooltipPosition=\"above\" mat-icon-button (click)=\"handleEditTask(task)\">\n    <mat-icon aria-label=\"icon-button to edit\">edit</mat-icon>\n  </button>\n  <button  matTooltip=\"Eliminar tarea\" matTooltipPosition=\"above\" mat-icon-button (click)=\"removeTask(task.id)\">\n    <mat-icon aria-label=\"icon-button to remove\">delete</mat-icon>\n  </button>\n  <p class=\"task__date\"><strong>Fecha de finalización:</strong> {{ task.date | date }}</p>\n  <p class=\"task__description\">{{task.description}}</p>\n</div>","<main class=\"board\" cdkDropListGroup>\n  <button\n    class=\"board__add\"\n    cdkOverlayOrigin\n    (click)=\"displayOverlay()\"\n    #trigger=\"cdkOverlayOrigin\"\n    mat-raised-button\n    color=\"primary\"\n  >\n    Añadir Tarea\n  </button>\n  <section class=\"board__list\">\n    <app-list *ngFor=\"let list of lists\" [list]=\"list\" (editTask)=\"displayOverlay($event)\"></app-list>\n  </section>\n  <ng-template\n    #connectedOverlay=\"cdkConnectedOverlay\"\n    cdkConnectedOverlay\n    [cdkConnectedOverlayOrigin]=\"trigger\"\n    [cdkConnectedOverlayOpen]=\"isOverlayDisplayed\"\n    [cdkConnectedOverlayHasBackdrop]=\"overlayOptions.hasBackdrop\"\n    [cdkConnectedOverlayPositions]=\"overlayOptions.positions\"\n    (backdropClick)=\"hideOverlay()\"\n    (detach)=\"hideOverlay()\"\n  >\n    <app-create-task [connectedOverlay]=\"connectedOverlay\" [task]=\"task\" [listId]=\"listId\"></app-create-task>\n  </ng-template>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService, ListSchema, TaskSchema } from './../../core';\nimport { TaskService } from 'src/app/core/services/task.service';\nimport { CdkConnectedOverlay } from '@angular/cdk/overlay';\n\nconst initialValue = {\n  id: '',\n  description: '',\n  date: '',\n  priority: '',\n};\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss'],\n})\nexport class BoardComponent implements OnInit {\n  lists: ListSchema[];\n  task: TaskSchema;\n  isOverlayDisplayed = false;\n  readonly overlayOptions: Partial<CdkConnectedOverlay> = {\n    hasBackdrop: true,\n    positions: [\n      { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    ],\n  };\n  listId: string;\n\n  constructor(private apiService: ApiService, private taskService: TaskService) {\n    this.task = initialValue;\n    this.lists = [];\n  }\n\n  ngOnInit(): void {\n    // this.getDataList();\n    this.getDataStored();\n  }\n\n  getDataList(): void {\n    this.apiService.getApi().subscribe(\n      (response: any) => (this.lists = response['list']),\n      (error: string) => console.log('Ups! we have an error: ', error)\n    );\n  }\n\n  getDataStored(): void {\n    this.taskService.getBoardList$\n      .subscribe(\n        (response: any) => this.lists = response,\n        (error: string) => (console.log('Ups! we have an error: ', error))\n    );\n  }\n\n  displayOverlay(event?: TaskSchema): void {\n    this.isOverlayDisplayed = true;\n    if (!!event) {\n      this.task = {\n        date: event.date,\n        id: event.id,\n        description: event.description,\n        priority: event.priority,\n      };\n      if(event.listId){\n        this.listId = event.listId;\n      }\n      \n    } else {\n      this.task = initialValue;\n    }\n  }\n\n  hideOverlay(): void {\n    this.isOverlayDisplayed = false;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ListSchema, TaskSchema } from './../../../core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { TaskService } from 'src/app/core/services/task.service';\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent implements OnInit {\n  @Input() list: ListSchema;\n  @Output() editTask: EventEmitter<TaskSchema> = new EventEmitter();\n\n  constructor(public tasksService: TaskService) {}\n\n  ngOnInit(): void {}\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n    \n  }\n\n  handleEdit(task: TaskSchema){\n    if (this.list) {\n      task.listId = this.list.id;\n      this.editTask.emit(task);\n    }\n  }\n\n \n}\n","<div\n  class=\"list\"\n  id=\"list_{{ list.id }}\"\n  cdkDropList\n  [cdkDropListData]=\"list.tasks\"\n  (cdkDropListDropped)=\"drop($event)\"\n>\n  <h3 class=\"list__title\">\n    <strong>{{ list.name }}</strong>\n  </h3>\n  <div class=\"list__tasks\">\n    <app-task\n      *ngFor=\"let task of list.tasks\"\n      [task]=\"task\"\n      [list]=\"list\"\n      (editTask)=\"handleEdit(task)\"\n      cdkDrag\n    ></app-task>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiService } from './services';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    ApiService\n  ]\n})\nexport class CoreModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { BoardRoutingModule } from './board-routing.module';\nimport { MaterialCdkModule } from './../material-cdk/material-cdk.module';\n\nimport { BoardComponent } from './board/board.component';\nimport { ListComponent } from './components/list/list.component';\nimport { TaskComponent } from './components/task/task.component';\nimport { CreateTaskComponent } from './components/create-task/create-task.component';\n\n@NgModule({\n  declarations: [BoardComponent, ListComponent, TaskComponent, CreateTaskComponent],\n  imports: [\n    CommonModule,\n    BoardRoutingModule, \n    MaterialCdkModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class BoardModule { }\n","export const generateUniqueId = () => '_' + Math.random().toString(36).substr(2, 9);","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError as observableThrowError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  //api with one task\n  //private apiRoot: string = 'https://run.mocky.io/v3/26045374-863c-469d-85c4-51ea1135ce8a';\n  //api without any task\n  private apiRoot: string = 'https://run.mocky.io/v3/7841d1af-e8d5-446a-bac5-3506fdd05659';\n  // api with many task\n  //private apiRoot: string = 'https://run.mocky.io/v3/0933ddef-c9bf-4f26-8ddf-77990fb490cb';\n\n\n  constructor(private http: HttpClient) { }\n\n  /* Get Api Data from mock service */\n  getApi() {\n    return this.http\n      .get<Array<{}>>(this.apiRoot)\n      .pipe(map(data => data), catchError(this.handleError));\n  }\n\n  /* Handle request error */\n  private handleError(res: HttpErrorResponse){\n    return observableThrowError(res.error || 'Server error');\n  }\n}\n","export * from './taskschema';\nexport * from './listschema';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n//Material\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n//CDK\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { PortalModule } from '@angular/cdk/portal';\n\nconst components = [\n  MatToolbarModule,\n  MatIconModule,\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  DragDropModule,\n  OverlayModule,\n  TextFieldModule,\n  MatDialogModule,\n  PortalModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, components],\n  exports: components,\n})\nexport class MaterialCdkModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { BoardComponent } from './board/board.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, PreloadAllModules } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full',\n  },\n  {\n    path: 'board',\n    //before syntax deprecated in v.8\n    //loadChildren: './board/board.module#BoardModule'\n    loadChildren: () => import('./board/board.module').then(m => m.BoardModule)\n  },\n  {\n    path: 'home',\n    //before syntax deprecated in v.8\n    //loadChildren: './home/home.module#HomeModule',\n    loadChildren: () => import('./home/home.module').then(m => m.HomeModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    // preload all modules; optionally we could\n    // implement a custom preloading strategy for just some\n    // of the modules\n    preloadingStrategy: PreloadAllModules\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService, TaskSchema, ListSchema } from '../';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private readonly boardList = new BehaviorSubject<ListSchema[]>([]);\n  readonly list$ = this.boardList.asObservable();\n  readonly getBoardList$ = this.list$.pipe(map((list) => list));\n\n  constructor(private apiService: ApiService) {\n    this.loadInitialData();\n  }\n\n  /* Load initial data to render in a component */\n  loadInitialData(): any {\n    return this.apiService.getApi().subscribe((response: any) => {\n      if (!!response) {\n        this.boardList.next(response['list']);\n      }\n    });\n  }\n\n  /* getter list of Board */\n  get list(): ListSchema[] {\n    return this.boardList.getValue();\n  }\n\n  /* setter list of Board */\n  set list(value: ListSchema[]) {\n    this.boardList.next(value);\n  }\n\n  /* Add new card to board list */\n  addTask(data: TaskSchema): void {\n    const card = data;\n    const elementsIndex = this.list.findIndex(\n      (element) => element.id === '1'\n    );\n    this.list[elementsIndex].tasks.push(card);\n  }\n\n  /* Edit card on list */\n  updateTask(data: TaskSchema, listId: string): void {\n    if (data) {\n      const elementsIndex = this.list.findIndex(\n        (element) => element.id === listId\n      );\n      const task = this.list[elementsIndex].tasks.map((element) => {\n        if (element.id === data.id) {\n          element.date = new Date(data.date);\n          element.description = data.description;\n          element.priority = data.priority;\n        }\n        return element;\n      });\n    }\n  }\n\n  /* Remove a card of board list */\n  removeTask(dataId: string, list: ListSchema): void {\n    const elementsIndex = this.list.findIndex(\n      (element) => element.id == list.id\n    );\n    const tasks = this.list[elementsIndex].tasks.filter(\n      (task) => task.id !== dataId\n    );\n    this.list[elementsIndex].tasks = tasks;\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}